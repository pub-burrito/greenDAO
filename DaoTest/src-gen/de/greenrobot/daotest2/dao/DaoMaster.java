package de.greenrobot.daotest2.dao;

import java.sql.Connection;
import java.sql.SQLException;

import de.greenrobot.dao.AbstractConnectionManager;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.DaoException;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import de.greenrobot.daotest2.dao.KeepEntityDao;
import de.greenrobot.daotest2.dao.ToManyTarget2Dao;
import de.greenrobot.daotest2.to1_specialdao.ToOneTarget2Dao;
import de.greenrobot.daotest2.specialdao.RelationSource2Dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(Connection connection, boolean ifNotExists) throws SQLException {
        KeepEntityDao.createTable(connection, ifNotExists);
        ToManyTarget2Dao.createTable(connection, ifNotExists);
        ToOneTarget2Dao.createTable(connection, ifNotExists);
        RelationSource2Dao.createTable(connection, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(Connection connection, boolean ifExists) throws SQLException {
        KeepEntityDao.dropTable(connection, ifExists);
        ToManyTarget2Dao.dropTable(connection, ifExists);
        ToOneTarget2Dao.dropTable(connection, ifExists);
        RelationSource2Dao.dropTable(connection, ifExists);
    }
    
    public static abstract class ConnectionManager extends AbstractConnectionManager {

        public ConnectionManager(String driverName, String connectionString) {
            super(driverName, connectionString, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(Connection connection) throws SQLException {
            //Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(connection, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevConnectionManager extends ConnectionManager {
        public DevConnectionManager(String driverName, String connectionString) {
            super(driverName, connectionString);
        }

        @Override
        public void onUpgrade(Connection connection, int oldVersion, int newVersion) throws SQLException {
            //Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(connection, true);
            onCreate(connection);
        }
    }
    
    public DaoMaster(Connection connection) throws DaoException {
        super(connection, SCHEMA_VERSION);
        registerDaoClass(KeepEntityDao.class);
        registerDaoClass(ToManyTarget2Dao.class);
        registerDaoClass(ToOneTarget2Dao.class);
        registerDaoClass(RelationSource2Dao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(connection, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(connection, type, daoConfigMap);
    }
    
}
